pipeline {
    agent {
        node {
            label 'jenkins-slave'
        }
    }

    parameters {
        choice(name: 'STAND', choices: ['dev', 'stage', 'prod'], description: 'Select a stand for deployment')
        string(name: 'TAG', defaultValue: 'testTag', description: 'Enter TAG')
        string(name: 'NAMESPACE', defaultValue: 'testNameSpace', description: 'Enter NAMESPACE')
        string(name: 'DEPLOYNAME', defaultValue: 'Develop', description: 'Enter DEPLOYNAME')
        string(name: 'PATH', defaultValue: 'some path', description: 'Enter Path to k8s directory')
    }

    stages {
        stage('Docker & Kubernetes login'){
            steps{
                sh "sudo docker login -u admin -p uhVUQ0IHE4Bf12fcD https://nexus-registry.codikup-qa.com"
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                echo "${params.STAND}"
                echo "${params.TAG}"
                echo "${params.NAMESPACE}"
                echo "${params.DEPLOYNAME}"
                echo "${params.PATH}"
                withKubeConfig([credentialsId: 'registry-default',
                        serverUrl: 'https://kubernetes.codikup-qa.com:6443',
                        contextName: 'test',
                        namespace: params.NAMESPACE
                    ]) {
                sh "sed -e \"s|TAG|${params.TAG}|g\" ~/${params.PATH}/k8s/deployment-${params.STAND}.yaml | kubectl apply -f -"
                sh "kubectl rollout status deployment work-app-develop"
                sh "cat k8s/service-${params.STAND}.yaml | kubectl apply --validate=false -f -"
                sh "sed -e \"s|NAMESPACE|${params.NAMESPACE}|g\" k8s/ingress-${params.STAND}.yaml | kubectl apply --validate=false -f -"
                }
            }
        }
    }
}
